// <auto-generated />
using System;
using MONEY_GUARDIAN.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MONEY_GUARDIAN.Infrastructure.Migrations
{
    [DbContext(typeof(PersistenceContext))]
    [Migration("20250606225523_migracionInicialBdEntities")]
    partial class migracionInicialBdEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExpenseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets", "dbo");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.Deposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonetaryFundId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonetaryFundId");

                    b.HasIndex("UserId");

                    b.ToTable("Deposits", "dbo");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.ExpenseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExpenseHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseHeaderId");

                    b.HasIndex("ExpenseTypeId");

                    b.ToTable("ExpenseDetails", "dbo");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.ExpenseHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Merchant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonetaryFundId")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonetaryFundId");

                    b.HasIndex("UserId");

                    b.ToTable("ExpenseHeaders", "dbo");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("ExpenseTypes", "dbo");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.MonetaryFund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MonetaryFunds", "dbo");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsUserGoogle")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsUserGoogle = false,
                            Name = "Administrator",
                            Password = "admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.Budget", b =>
                {
                    b.HasOne("MONEY_GUARDIAN.Domain.Entities.ExpenseType", "ExpenseType")
                        .WithMany("Budgets")
                        .HasForeignKey("ExpenseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MONEY_GUARDIAN.Domain.Entities.User", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.Deposit", b =>
                {
                    b.HasOne("MONEY_GUARDIAN.Domain.Entities.MonetaryFund", "MonetaryFund")
                        .WithMany("Deposits")
                        .HasForeignKey("MonetaryFundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MONEY_GUARDIAN.Domain.Entities.User", "User")
                        .WithMany("Deposits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonetaryFund");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.ExpenseDetail", b =>
                {
                    b.HasOne("MONEY_GUARDIAN.Domain.Entities.ExpenseHeader", "ExpenseHeader")
                        .WithMany("Details")
                        .HasForeignKey("ExpenseHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MONEY_GUARDIAN.Domain.Entities.ExpenseType", "ExpenseType")
                        .WithMany("ExpenseDetails")
                        .HasForeignKey("ExpenseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseHeader");

                    b.Navigation("ExpenseType");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.ExpenseHeader", b =>
                {
                    b.HasOne("MONEY_GUARDIAN.Domain.Entities.MonetaryFund", "MonetaryFund")
                        .WithMany("ExpenseHeaders")
                        .HasForeignKey("MonetaryFundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MONEY_GUARDIAN.Domain.Entities.User", "User")
                        .WithMany("ExpenseHeaders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonetaryFund");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.ExpenseHeader", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.ExpenseType", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("ExpenseDetails");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.MonetaryFund", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("ExpenseHeaders");
                });

            modelBuilder.Entity("MONEY_GUARDIAN.Domain.Entities.User", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Deposits");

                    b.Navigation("ExpenseHeaders");
                });
#pragma warning restore 612, 618
        }
    }
}
